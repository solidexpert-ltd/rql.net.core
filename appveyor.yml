---
#---------------------------------#
#      general configuration      #

# set clone depth
clone_depth: 1 # clone entire repository history if not defined
image:
  - Visual Studio 2022
# build cache to preserve files/folders between builds
# cache:
#   - packages -> **\packages.config # preserve "packages" directory in the root of build folder but will reset it if packages.config is modified
#   - '%LocalAppData%\NuGet\Cache' # NuGet < v3
#   - '%LocalAppData%\NuGet\v3-cache' # NuGet v3

# Automatically register private account and/or project AppVeyor NuGet feeds.
nuget:
  account_feed: true
  project_feed: true
  disable_publish_on_pr: true # disable publishing of .nupkg artifacts to account/project feeds for pull request builds

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# Build settings, not to be confused with "before_build" and "after_build".
# "project" is relative to the original build directory and not influenced by directory changes in "before_build".
build:
  parallel: true # enable MSBuild parallel builds
  project: RQL.NET.CORE/RQL.NET.CORE.csproj # path to Visual Studio solution or project
  publish_aspnet_core: true # Package ASP.NET Core projects
  publish_nuget: true # package projects with .nuspec files and push to artifacts
  publish_nuget_symbols: true # generate and publish NuGet symbol packages
  include_nuget_references: true # add -IncludeReferencedProjects option while packaging NuGet artifacts

  # MSBuild verbosity level
  verbosity: normal

before_build:
  - cmd: >-
      dotnet restore RQL.NET.CORE/RQL.NET.CORE.csproj

# scripts to run after build (working directory and environment changes are persisted from the previous steps)
after_build:
  - cmd: >-
      dotnet restore tests/tests.csproj
  - cmd: >-
      dotnet build tests/tests.csproj

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# to disable automatic builds
#build: off



#---------------------------------#
#       tests configuration       #
#---------------------------------#

# to run tests against only selected assemblies and/or categories
# test:
#   assemblies:
#     only:
#       - '**\*tests.dll'

# to run tests against all except selected assemblies and/or categories
#test:
#  assemblies:
#    except:
#      - asm1.dll
#      - asm2.dll
#
#  categories:
#    except:
#      - UI
#      - E2E

# to run tests from different categories as separate jobs in parallel
#test:
#  categories:
#    - A            # A category common for all jobs
#    - [UI]         # 1st job
#    - [DAL, BL]    # 2nd job

# scripts to run before tests (working directory and environment changes are persisted from the previous steps such as "before_build")
# before_test:
#   - echo script1
#   - ps: Write-Host "script1"

# to run your custom scripts instead of automatic tests
test_script:
  - cmd: dotnet test tests/tests.csproj --no-build --no-restore #--test-adapter-path:. --logger:Appveyor Test

# scripts to run after tests
after_test:

# to disable automatic tests
#test: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

artifacts:
  # pushing entire folder as a zip archive
  - path: logs

  # pushing all *.nupkg files in build directory recursively
  - path: '**\*.nupkg'
#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
# on_success:
#   - do something

# # on build failure
# on_failure:
#   - do something

# # after build failure or success
# on_finish:
#   - do something

#---------------------------------#
#         notifications           #
#---------------------------------#

# notifications:
# # Webhook
# - provider: Webhook
#   url: http://www.myhook2.com
#   headers:
#     User-Agent: myapp 1.0
#     Authorization:
#       secure: GhD+5xhLz/tkYY6AO3fcfQ==
#   on_build_success: false
#   on_build_failure: true
#   on_build_status_changed: true
